Задача 2. ModifiableIntegerFunction
Напишете клас ModifiableIntegerFunction, който приема функция и позволява модификации върху нея. Функцията преобразува 16-битови числа (приема 16-битово знаково число и връща 16-битово знаково число).

Трябва да поддържате следните модификации:
Задаване на резултат за конкретен вход: Това означава, че може да определите специфичен изход за даден вход. (Например, ако имате функцията f(x) = x * 2, може да зададете, че за x = 3, вместо 6, функцията трябва да връща 10). 
Изключване на точка: Това позволява да направите функцията "частична", което означава, че за определени входни стойности функцията няма да върне резултат.
(В примера с f(x) = x * 2 може да изключите стойността x = 3, така че при опит за изчисление на f(3) да се получи грешка или специален сигнал, че функцията за този вход не е дефинирана.)





Трябва да се предефинират оператори за:
Събиране/изваждане на функции
Композиция на функции 
(Ако за дадена точка някоя от функциите не е дефинирана, то и резултатната не е дефинирана).
Оператори за сравнение между функции, които оценяват изходите от двете функции при всички възможни входове. (f < g ⇔ f(x) < g(x) за всяко x) 
Ако една функция не дава резултат за определен вход, този случай се третира като имащ най-ниска стойност при сравнението.
Проверка дали графиките на две функции са успоредни.
Оператор ^ за многократно приложение (f^k(x) = f(f(f…(f(x)))))) )
Генериране на обратната (f^-1) функция, ако функцията е обратима
f^-1 (x) е дефинирана ⇔ f(x) е дефинирана.
Имплементирайте и функции за:
Проверка за това дали функцията е инекция/сюрекция/биекция.
Сериализация/десериализация в/от двоичен файл.
Изчертаване на точките на функцията в дадена част от равнината [x1 … x2] // [y1… y2], където x2 - x1 = 20  и y2 - y1 = 20.
